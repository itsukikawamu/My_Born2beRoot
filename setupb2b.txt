０.VB上でのホスト側の設定と事前インストール
言語を日本語に
入力＞仮想マシン＞ホストキーの組み合わせを左ctl + 左cmmand(windows)キー
一般デフォルトの仮想マシンフォルダを/sgoinfre
Debian公式HPでISOイメージをダウンロード
１.VBで仮想マシンの新規作成
１.１ 名前とOS
名前を初めて使う名前に設定、フォルダを/sgoinfre、I
SOイメージをdebian-x.x.x-amd64-netinst.iso
自動インストールをスキップにチェックを入れる
１.２ハードウェアをデフォルト、、仮想ハードディスクを30.8Gで設定し
完了ボタンを押す。起動する。上部メニューの表示＞スケールモードを選択
２.OSの初期設定
Debian12 Debian GNU/Linux installer menu (BIOS mode)でInstallを選択
Languageを英語、Country, territory or areaをUnited States、
KeymapをAmerican English 、Hostnameをikawamuk42、Domainnameを空欄
Root passwordを設定、userFullname, usernameをikawamuk、passwordを設定
time zoneをEasternに、
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
パーティション設定
Partitioning methodをManual
設定するパーティションでVBOX HARDDISKを選択　-yes
物理Partitionを設定しsda1を/boot
Configure encrypted partitionでsda5を作成 use as LVMに
Configure LVM -yes; Create volume groupで名前はLVMGroup; /dev/sdaを選択; -yes
パスコード設定
Create logcal volume -LVMGroupで7つのlvを作る。
name: root, size: 10GiB など　×７
Configure encrypted volumes -yes -Create encrypted vlolumes;
Devices to encryptで全部選択
Use as:をExt4(swapはswap area)と、lv名をもとにMount point:を編集 
-Done setting up -yes -Finish; Finish Partitioning and write changes to disk;
今回はブートローダがBIOS(UFEIだと動かなかった)なので互換性のあるMBRパーティション。
lsblk（list block devices)コマンドで確認可
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
Scan extra installation mediaをNo
Debian archive mirror countryをUS,  archive mirrorをdeb_ebian_org
HTTP proxy infoを空欄、Participate in the package usage survey?をNo
choose software installをspaceキーですべての選択外しenter
install the GRUB boot loader to your primary drive? をYes/dev/sdaを選択reboot?をContinue

２.起動、ログイン、初期設定の確認
login: root password:入力してルートユーザーでログイン
インストール時のパッケージ情報確認 dpkg -l  (list)　
またdpkg -s  パッケージ名で特定のパsudo systemctl restart lighttpd
ッケージの状態を確認できる
アップデート  apt update && apt upgrade
AppArmorの状態確認 systemctl status apparmor.service でenabled, activeならOK

timedatectl set-timezone Asia/Tokyoでdateコマンドを日本時間
３．パッケージのインストール1
apt install manするとmanがみれる
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
-ufw
    ファイアウォールの状態確認　未インストールなのでapt install ufw
    ufw status verboseで状態確認 ufw enable/disable で有効化/無効化
usermod -aG user42 ikawamukでグループに追加
-sudo
    apt update && apt install sudo && usermod -aG sudo ikawamukでsudoグループに追加
groupsコマンドでsudoグループに入っていっればOK
sudoersの設定
sudersファイルを直接編集せず/etc/sudoers.d/内に自分で(任意の名前で)ファイルを追加して設定する。b2b_rulesというファイルで以下のルールを追加。ただし、構文エラーを対策する為visudo -f /etc/sudoers.d/b2b_rules コマンドで編集しよう。
Defaults	passwd_tries=3
Defaults	badpass_message="That's unique password! but it's still wrong..."
Defaults	log_input
Defaults	log_output
Defaults	iolog_dir="/var/log/sudo"
Defaults	requiretty
Defaults secure_path=
"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

ここでログインするユーザーをikawamukにします
logはsudo sudoreplay -d /var/log/sudo 000001などで確認可
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
-openssh-server
    sudo apt update && sudo apt install openssh-server
    sudo systemctl status sshdでenabled, activeならOK。
４.リモートログイン
VMをシャットダウンし、ツールのハンバーガーメニュー＞ネットワークでホストオンリーネットワークを作成、アダプタを設定。
VMの設定＞ネットワーク＞アダプタ２を有効にしホストオンリーアダプタに設定　
再度VMを起動して ip aでloの他にネットワークが２つあることを確認
sudo nano /etc/network/interfacesで静的IPアドレスを設定
# The host-only network interface
allow-hotplug enp0s8
iface enp0s8 inet static
	    address 192.168.60.2
	     netmask 255.255.255.0
を追加
/etc/ssh/sshd_configの#Port 22 →Port 4242 でポート番号の変更
#PermitRootLogin prohibit-password
  →  PermitRootLogin no でrootへのログイン禁止
クライアントで~/.ssh/configに以下を記載するとssh ikawamuk42 でもいける
Host ikawamuk42
        HostName 192.168.60.2
        User ikawamuk
        Port 4242
sudo rebootしてからホストOSでssh ikawamuk@IPアドレス　でリモートログイン
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
sudo systemctl restart sshdで再起動したら反映
ファイアウォールの設定。
ikawamuk@ikawamuk42:~$ sudo ufw status verbose　で状態確認
sudo ufw allow 4242/tcpでポートを開ける(デフォルトは全閉じ)
sudo ufw enable で起動
ikawamuk@ikawamuk42:~$ sudo ufw status verbose
Status: active

To                         Action      From
--                         ------      ----
4242/tcp                   ALLOW       Anywhere                  
4242/tcp (v6)              ALLOW       Anywhere (v6) 

sudo ufw delete allow 80 でルール削除できる
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
モニタリングシェルスクリプト
sudo apt install figletしてバナー用文字変換コマンドをインストール
sudo nano /usr/local/bin/monitoring_shに以下の「内容」を記述

#!/bin/bash
until who | grep -q .; do
    sleep 1
done
# =========================================================
BANNER=$(figlet "System Monitor")
ARCHITECTURE=$(uname -a)
CPU_PHYSICAL=$(lscpu | grep "Socket(s):" | awk '{print $2}')
VCPU=$(nproc)
MEM_TOTAL=$(free -m | awk '/^Mem:/ {print $2}')
MEM_USED=$(free -m | awk '/^Mem:/ {print $3}')
MEM_PERCENT=$(awk "BEGIN {printf \"%.2f\", ($MEM_USED/$MEM_TOTAL)*100}")
DISK_USED=$(df -Bm --total | grep '^/dev/' | awk '{used+=$3} END {print used}')
DISK_TOTAL=$(df -Bm --total | grep '^/dev/' | awk '{size+=$2} END {print size}')
DISK_PERCENT=$(awk "BEGIN {printf \"%.0f\", ($DISK_USED/$DISK_TOTAL)*100}")
CPU_LOAD=$(top -bn1 | grep "load average" | awk '{print $(NF-2)}' | tr -d ',')
LAST_BOOT=$(who -b | awk '{print $3" "$4" "$5}')
LVM_USE=$(lsblk | grep -q 'lvm' && echo "yes" || echo "no")
TCP_CONN=$(ss -t | grep ESTAB | wc -l)
USER_LOG=$(who | cut -d ' ' -f 1 | sort | uniq | wc -l)
IP=$(hostname -I | awk '{print $1}')
MAC=$(ip link show | awk '/ether/ {print $2}' | head -n 1)
SUDO_CMDS=$(journalctl _COMM=sudo | grep COMMAND | wc -l)
# ========================================================
wall << EOF
$BANNER
#Architecture: $ARCHITECTURE
#CPU physical: $CPU_PHYSICAL
#vCPU: $VCPU
#Memory Usage: ${MEM_USED}/${MEM_TOTAL}MB (${MEM_PERCENT}%)
#Disk Usage: ${DISK_USED}/${DISK_TOTAL}Mb (${DISK_PERCENT}%)
#CPU load: $CPU_LOAD%
#Last boot: $LAST_BOOT
#LVM use: $LVM_USE
#Connections TCP: $TCP_CONN ESTABLISHED
#User log: $USER_LOG
#Network: IP $IP ($MAC)
#Sudo: $SUDO_CMDS cmd
EOF

このファイルの権限をrootのみ。sudo chmod 700 /usr/local/bin/monitoring_sh
{cronへの設定は、rootでログインし、cronntab -e  で 
@reboot　/usr/local/bin/monitoring_sh
*/10 * * * * /usr/local/bin/monitoring_sh
を追加} 

/etc/systemd/system/monitoring.service に以下を追加
[Unit]
Description=Monitoring Script at Boot (invoked by timer)
After=multi-user.target
[Service]
Type=oneshot
ExecStart=/usr/local/bin/monitoring_sh
 /etc/systemd/system/monitoring.timerに以下を追加[Unit]
Description=Run monitoring_sh every 10 minutes
After=multi-user.target
Requires=multi-user.target network.target
[Timer]
OnBootSec=0sec
OnUnitActiveSec=10min
Unit=monitoring.service
[Install]
WantedBy=timers.target
 
 sudo systemctl enable monitoring.timer &&
sudo systemctl start monitoring.timer　で実行開始
sudo systemctl status monitoring.timerで確認

パスワードポリシーの設定
DebianもsudoもPAM(Pluggable Authentication Modules)をつかって認証をしてる。
sudo apt install libpam-pwquality　をすると
/etc/pam.d/common-passwordにpassword	requisite			pam_pwquality.so retry=3が追加され認証時に		pam_pwquality.soが使われる。pam_pwquality.soは/etc/security/pwquality.confを参照する。/etc/security/pwquality.confに以下を。
difok = 7
minlen = 10
dcredit = -1
ucredit = -1
lcredit = -1
maxrepeat = 3
enforcing = 1
enforce_for_root
これらを有効化したら完成。
passwdでrootとuserのパスを変える

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
ボーナス
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
○ワープレ  
最初に必要なパッケージのインストール(php, sql, Web server)
wordpressをlighttpdで使う場合、php-cgiというプログラムを使ってphp実行エンジンを呼び出してphpファイルを実行しないといけないのでphp-cgiで。
sudo apt update && sudo apt install php-cgi mariadb-server lighttpd
lighttpd(webサーバの設定)
systemctl restart lighttpd
sudo systemctl status lighttpd でenableを確認

lighttpd側でもコレを有効化するには「/etc/lighttpd/conf-available/に配置されたcgi用の設定ファイル」へのシンボリックリンクを作成して/etc/lighttpd/conf-enableに配置しなければならないが、コレを以下のコマンドでおこなう
sudo lighty-enable-mod fastcgi
sudo lighty-enable-mod fastcgi-php

ワードプレスのインストール
cd /tmp
sudo apt install wget
wget https://wordpress.org/latest.tar.gz
tar -xzf latest.tar.gz
sudo rm /var/www/html/*
sudo mv wordpress/*  /var/www/html/
sudo chown -R www-data:www-data /var/www/html

ホストOSのブラウザでhttps:// (VMのIPアドレス) にアクセス。
php-mysqlのインストールを求められるのでsudo apt install php-mysql
再アクセスし、wordpressの設定画面が表示されたらOK。DBの作成を求められる
DBを作り/var/www/html/wp-config.php に設定しよう
sudo mariadb
CREATE DATABASE wp_db;
CREATE USER 'ikawamuk'@'localhost' IDENTIFIED BY 'itou';
GRANT ALL PRIVILEGES ON wp_db.* TO 'ikawamuk'@'localhost';
FLUSH PRIVILEGES;
としてから、各情報をブラウザ上で入力、サイト情報も入力
記事を作成して公開

○git serverの追加
sudo apt update && sudo apt install git
sudo adduser git
sudo chsh -s /usr/bin/git-shell git
これでclone, pushを行う専用のユーザgitがつくられました
/srvにgitというディレクトリを作成し、gitユーザを所有者にします
sudo mkdir -p /srv/git
sudo chown git:git /srv/git
gitリポジトリは毎回サーバーの管理者が以下のように作成しなければいけません
sudo -u git git init --bare /srv/git/myproject.git
クライアントで 以下のコマンドでclone(push)できる。add, commitは普通通り
git clone(push) ssh://git@192.168.60.2:4242/srv/git/myproject.git

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
